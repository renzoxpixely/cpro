/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Item=__webpack_require__(/*! ./src/item */ \"./src/item.js\");\r\nconst Total=__webpack_require__(/*! ./src/totales */ \"./src/totales.js\");\r\n\r\nmodule.exports={Item, Total};\r\n\r\n// console.log(calculadora(10,20,\"resta\"));\r\n\n\n//# sourceURL=webpack://nubefa-producto-calculos/./index.js?");

/***/ }),

/***/ "./src/item.js":
/*!*********************!*\
  !*** ./src/item.js ***!
  \*********************/
/***/ ((module) => {

eval("const decodeRound = (type, value, exp) => {\r\n  // Si el exp es indefinido o cero...\r\n  if (typeof exp === 'undefined' || Number(exp) === 0) {\r\n    return Math[type](value);\r\n  }\r\n  value = Number(value);\r\n  exp = Number(exp);\r\n  // Si el valor no es un número o el exp no es un entero...\r\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\r\n    return NaN;\r\n  }\r\n\r\n  // Cambio\r\n  value = value.toString().split('e');\r\n  value = Math[type](Number(`${value[0]}e${value[1] ? Number(value[1]) - exp : -exp}`));\r\n  // Volver a cambiar\r\n  value = value.toString().split('e');\r\n  return Number(`${value[0]}e${value[1] ? Number(value[1]) + exp : exp}`);\r\n};\r\n\r\nif (!Math.round10) {\r\n  Math.round10 = function(value, exp) {\r\n    return decodeRound('round', value, exp);\r\n  };\r\n}\r\n\r\nclass item {\r\n  /*\r\n   * Config = {\r\n   * state:'Ventas',\r\n   * detraccion:'detraccion de la empresa',\r\n   * }\r\n   */\r\n  constructor(config = {state: 'Ventas'}) {\r\n    this.config = config;\r\n  }\r\n\r\n  igv(producto) {\r\n    let precio = 0;\r\n    if (this.config.state === 'Ventas') {\r\n      precio = Math.round10(producto.lpd_vpre + producto.isc, -6);\r\n    } else {\r\n      precio = Math.round10(producto.lpd_vpre, -6);\r\n    }\r\n    producto.lpd_valor_igv = Math.round10(((precio * 1.18) - precio) - (producto.lpd_desc_val - (producto.lpd_desc_val / 1.18)), -6);\r\n    producto.total_lpd_valor_igv = Math.round10(producto.lpd_valor_igv * producto.vd_can, -6);\r\n\r\n    return producto;\r\n  }\r\n\r\n  detraccion(producto) {\r\n    if (producto.categoria_producto === 3) {\r\n      producto.sumDetraccion = producto.lpd_vpre + producto.isc + producto.lpd_valor_igv;\r\n      producto.total_detraccion = Math.round10((producto.lpd_vpre + producto.isc + producto.lpd_valor_igv) * (producto.pro_detraccion / 100), -6);\r\n    }\r\n\r\n    if (producto.pro_detraccion > 0) {\r\n      producto.sumDetraccion = producto.lpd_vpre + producto.isc + producto.lpd_valor_igv;\r\n      producto.total_detraccion = Math.round10((producto.lpd_vpre + producto.isc + producto.lpd_valor_igv) * (producto.pro_detraccion / 100), -6);\r\n    }\r\n    return producto;\r\n  }\r\n\r\n  isc(producto) {\r\n    if (this.config.state === 'Ventas') {\r\n      producto.isc = Math.round10(producto.lpd_vpre * (Math.round10(producto.pro_isc, -6) / 100), -6);\r\n    } else {\r\n      producto.isc = 0;\r\n    }\r\n    return producto;\r\n  }\r\n\r\n  descuento(producto, lpd_desc_val = false, lpd_desc_por = false) {\r\n    producto.lpd_desc_por = Math.round10((producto.lpd_desc_val * 100) / producto.lpd_vpre, -6);\r\n    producto.lpd_pre = Math.round10(producto.lpd_pre - producto.lpd_desc_val, -6);\r\n    return producto;\r\n  }\r\n\r\n  inafecto(producto, new_precio = false, new_cantidad = false) {\r\n    precio = producto.lpd_pre;\r\n    falso_monto = producto.falso_monto;\r\n    precio_sin_igv = Math.round10(precio, -6);\r\n    monto_utilidad = Math.round10((precio_sin_igv / falso_monto) * 100 - 100, -6);\r\n    producto.falso_monto = Math.round10(falso_monto, -6);\r\n    producto.lpd_uti = Math.round10(monto_utilidad, -6); // Porcentaje de utlidad\r\n    producto.lpd_vpre = precio; // Valor de venta sin igv en caso de inafecto es el monto global\r\n    producto.lpd_valor_igv = 0;\r\n    producto.isc = 0;\r\n    producto.total_isc = producto.isc * new_precio;\r\n    producto.setTipAfeIgv = 32;\r\n    return producto;\r\n  }\r\n\r\n  afecto(producto, new_precio = false, new_cantidad = false) {\r\n    producto.lpd_vpre = Math.round10(producto.lpd_pre / (18 / 100 + 1), -6); // Precio base del producto\r\n\r\n    producto.lpd_uti = Math.round10((producto.lpd_vpre / producto.falso_monto) * 100 - 100, -6); // Utilidad del producto\r\n\r\n    if (producto.pro_isc == null) {\r\n      producto.pro_isc = 0;\r\n      producto.isc = 0;\r\n    }\r\n\r\n    if (producto.pro_isc !== 0) {\r\n      producto = {\r\n        ...producto,\r\n        ...this.isc(producto),\r\n      };\r\n    }\r\n\r\n    producto.lpd_valor_igv = Math.round10(producto.lpd_vpre * 0.18, -6);\r\n    producto.falso_monto = Math.round10(producto.falso_monto, -6);\r\n    producto.total_isc = producto.isc * new_precio;\r\n\r\n    producto.total_lpd_vpre =\r\n      (Math.round10(producto.lpd_vpre, -6) +\r\n        Math.round10(producto.isc, -6) +\r\n        Math.round10(producto.lpd_valor_igv, -6) -\r\n        Math.round10(producto.lpd_desc_val, -6)\r\n      ) *\r\n      new_precio;\r\n\r\n    producto = {\r\n      ...producto,\r\n      ...this.igv(producto),\r\n    };\r\n    producto.setTipAfeIgv = 10;\r\n\r\n    return producto;\r\n  }\r\n\r\n  listenPrecio(producto, new_precio) {\r\n    // //ISC\r\n    const isc = 0;\r\n\r\n    // //Monto Valor Unitario\r\n    const precio_sin_igv = 0;\r\n\r\n    // //Utilidad\r\n    const monto_utilidad = 0;\r\n\r\n    // // Monto Igv\r\n    const valorigv = 0;\r\n\r\n    // //Precio Unitario\r\n    const precio = 0;\r\n\r\n    // //Monto de Factor\r\n    const falso_monto = 0;\r\n\r\n    // //Total Utilidad\r\n    const lpd_uti = 0;\r\n\r\n    // //Monto Valor Unitario\r\n    const lpd_vpre = 0;\r\n\r\n    // //Valor IGV\r\n    const lpd_valor_igv = 0;\r\n\r\n    if (producto.pro_ina === 1) {\r\n      producto = {\r\n        ...producto,\r\n        ...this.inafecto(producto, new_precio),\r\n      };\r\n    } else {\r\n      producto = {\r\n        ...producto,\r\n        ...this.afecto(producto, new_precio),\r\n      };\r\n    }\r\n\r\n    producto = {\r\n      ...producto,\r\n      ...this.detraccion(producto, producto.lpd_vpre),\r\n    };\r\n\r\n    return producto;\r\n  }\r\n\r\n  listenCantidad(producto, new_cantidad) {\r\n    if (producto.lpd_desc_val === undefined) {\r\n      producto.lpd_desc_val = 0;\r\n      producto.lpd_desc_por = 0;\r\n    }\r\n\r\n    if (producto.pro_ina === 1) {\r\n      producto = {\r\n        ...producto,\r\n        ...this.inafecto(producto, false, new_cantidad),\r\n      };\r\n    } else {\r\n      producto = {\r\n        ...producto,\r\n        ...this.afecto(producto, false, new_cantidad),\r\n      };\r\n    }\r\n\r\n    producto = {\r\n      ...producto,\r\n      ...this.detraccion(producto, producto.lpd_vpre),\r\n    };\r\n    return producto;\r\n  }\r\n\r\n  watchItem(producto) {\r\n    if (!producto.isc) {\r\n      try {\r\n        producto.isc = producto.pro_isc;\r\n        producto.pro_isc = undefined;\r\n      } catch {\r\n        producto.isc = 0;\r\n      }\r\n    }\r\n    if (producto.lpd_desc_val === undefined) {\r\n      producto.lpd_desc_val = 0;\r\n      producto.lpd_desc_por = 0;\r\n    }\r\n\r\n    if (producto.pro_ina === 1) {\r\n      producto = {...producto,\r\n        ...this.inafecto(producto)};\r\n    } else {\r\n      producto = {...producto,\r\n        ...this.afecto(producto)};\r\n    }\r\n\r\n    producto = {...producto,\r\n      ...this.detraccion(producto, producto.lpd_vpre)};\r\n\r\n    return producto;\r\n  }\r\n}\r\n\r\nmodule.exports = item;\r\n\n\n//# sourceURL=webpack://nubefa-producto-calculos/./src/item.js?");

/***/ }),

/***/ "./src/totales.js":
/*!************************!*\
  !*** ./src/totales.js ***!
  \************************/
/***/ ((module) => {

eval("const decodeRound = (type, value, exp) => {\r\n// Si el exp es indefinido o cero...\r\n  if (typeof exp === 'undefined' || +exp === 0) {\r\n    return Math[type](value);\r\n  }\r\n  value = +value;\r\n  exp = +exp;\r\n  // Si el valor no es un número o el exp no es un entero...\r\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\r\n    return NaN;\r\n  }\r\n\r\n  // Cambio\r\n  value = value.toString().split('e');\r\n  value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)));\r\n  // eslint-disable-next-line indent\r\n  // Volver a cambiar\r\n  value = value.toString().split('e');\r\n  // eslint-disable-next-line indent\r\n  return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));\r\n};\r\n\r\nif (!Math.round10) {\r\n  Math.round10 = function(value, exp) {\r\n    return decodeRound('round', value, exp);\r\n  };\r\n}\r\n\r\n\r\nclass total {\r\n  /*\r\n    config = {\r\n    limite_detraccion:700,\r\n    agente:2,\r\n    percepcion:200,\r\n    descuento_global,\r\n    }\r\n    */\r\n\r\n  constructor(productos = [], config = {\r\n    limite_detraccion: 1,\r\n    descuento_global: 0,\r\n  }) {\r\n    this.productos = productos;\r\n    this.config = config;\r\n    this.infoInputs = {};\r\n  }\r\n\r\n  // eslint-disable-next-line require-jsdoc\r\n  handleItemList() {\r\n    this.infoInputs.getCantidadTotal = 0;\r\n    this.infoInputs.getMontoTotal = 0;\r\n    this.infoInputs.getMontoTotalDocumento = 0;\r\n    this.infoInputs.getTotalInafecto = 0;\r\n    // eslint-disable-next-line indent\r\n        this.infoInputs.getTotalAfecto = 0;\r\n    this.infoInputs.getTotalIgv = 0;\r\n    this.infoInputs.getTotalPeso = 0;\r\n    this.infoInputs.getTotalPercepcion = 0;\r\n\r\n    this.infoInputs.totalMercaderia = 0;\r\n    this.infoInputs.totalMateriaPrima = 0;\r\n    this.infoInputs.totalMateriales = 0;\r\n    this.infoInputs.totalEmbalajes = 0;\r\n    this.infoInputs.totalRepuestos = 0;\r\n    this.infoInputs.totalEnvases = 0;\r\n    this.infoInputs.totalSuministros = 0;\r\n    this.infoInputs.totalServicioGasto = 0;\r\n\r\n    this.infoInputs.MontoTotalDetraccion = 0;\r\n    this.infoInputs.getTotalDetraccion = 0;\r\n    this.infoInputs.getTotalDescuento = 0;\r\n    this.infoInputs.getMontoDescuentoGlobal = this.config.descuento_global ? this.config.descuento_global : 0 ;\r\n    this.infoInputs.getTotalIsc = 0;\r\n\r\n    this.productos.forEach((e) => {\r\n      if (e.lpd_desc_val === undefined) {\r\n        e.lpd_desc_val = 0;\r\n      }\r\n\r\n      if (e.isc > 0) {\r\n        this.infoInputs.getTotalIsc = this.infoInputs.getTotalIsc + e.isc * e.vd_can;\r\n      }\r\n\r\n      if (e.total_detraccion > 0) {\r\n        this.infoInputs.getTotalDetraccion = Math.round10(this.infoInputs.getTotalDetraccion + e.total_detraccion, -6);\r\n        this.infoInputs.MontoTotalDetraccion = Math.round10(this.infoInputs.MontoTotalDetraccion + e.sumDetraccion, -6);\r\n      }\r\n\r\n      if (e.categoria_producto !== 3) {\r\n        this.infoInputs.getCantidadTotal = Math.round10(this.infoInputs.getCantidadTotal, -6) + Math.round10(e.vd_can, -6);\r\n      }\r\n\r\n      // calcular monto total\r\n      // total afecto productos sin IGV\r\n\r\n      if (e.pro_ina === 1) {\r\n        this.infoInputs.getTotalInafecto = Math.round10(\r\n            this.infoInputs.getTotalInafecto + e.vd_can * e.lpd_pre, -6,\r\n        );\r\n      }\r\n\r\n      // total afecto productos con IGV\r\n      if (e.pro_ina  !== 1) {\r\n        this.infoInputs.getTotalAfecto = Math.round10(\r\n            this.infoInputs.getTotalAfecto + e.isc + e.vd_can * (e.lpd_vpre - (e.lpd_desc_val / 1.18)), -6,\r\n        );\r\n      }\r\n\r\n      // total IGV\r\n      if (e.total_lpd_valor_igv) {\r\n        this.infoInputs.getTotalIgv = Math.round10(\r\n            this.infoInputs.getTotalIgv + e.total_lpd_valor_igv, -6,\r\n        );\r\n        if (this.infoInputs.getMontoDescuentoGlobal > 0 ) {\r\n          this.infoInputs.getTotalIgv = this.infoInputs.getTotalIgv - (this.infoInputs.getMontoDescuentoGlobal * 222222);\r\n        }\r\n      }\r\n\r\n      // Descuentos\r\n      this.infoInputs.getTotalDescuento = this.infoInputs.getTotalDescuento + Math.round10(e.vd_can * e.lpd_desc_val, -6);\r\n\r\n      this.infoInputs.getMontoTotalDocumento = Math.round10(\r\n          // this.infoInputs.getTotalIgv +\r\n          this.infoInputs.getTotalAfecto +\r\n                this.infoInputs.getTotalInafecto - this.infoInputs.getMontoDescuentoGlobal, -6,\r\n      );\r\n\r\n\r\n      // Percepción\r\n      if (this.config.agente === 2) {\r\n        this.infoInputs.getTotalPercepcion =\r\n                    this.infoInputs.getTotalPercepcion +\r\n                    Math.round10(\r\n                        this.infoInputs.getMontoTotalDocumento *\r\n                        (this.config.percepcion / 100), -6,\r\n                    );\r\n      }\r\n\r\n      // Montos Totales\r\n\r\n      this.infoInputs.getMontoTotal = Math.round10(\r\n          this.checkDetraccion(this.infoInputs) +\r\n                this.infoInputs.getTotalPercepcion +\r\n                this.infoInputs.getTotalIgv +\r\n                this.infoInputs.getTotalAfecto +\r\n                this.infoInputs.getTotalInafecto - this.infoInputs.getMontoDescuentoGlobal, -6,\r\n      );\r\n\r\n      // Peso\r\n      this.infoInputs.getTotalPeso = this.infoInputs.getTotalPeso + Math.round10(e.vd_can * e.pro_peso, -6);\r\n\r\n      // sumatoria de todos tipo de productos\r\n      switch (e.categoria_producto) {\r\n        case 1:\r\n          this.infoInputs.totalMercaderia =\r\n                        this.infoInputs.totalMercaderia +\r\n                        Math.round10(e.vd_can * e.lpd_vpre, -6);\r\n          break;\r\n\r\n        case 2:\r\n          this.infoInputs.totalMateriaPrima =\r\n                        this.infoInputs.totalMateriaPrima +\r\n                        Math.round10(e.vd_can * e.lpd_vpre, -6);\r\n          break;\r\n\r\n        case 3:\r\n          this.infoInputs.totalMateriales =\r\n                        this.infoInputs.totalMateriales +\r\n                        Math.round10(e.vd_can * e.lpd_vpre, -6);\r\n          break;\r\n\r\n        case 4:\r\n          this.infoInputs.totalEmbalajes =\r\n                        this.infoInputs.totalEmbalajes +\r\n                        Math.round10(e.vd_can * e.lpd_vpre, -6);\r\n          break;\r\n        case 5:\r\n          this.infoInputs.totalRepuesto =\r\n                        this.infoInputs.totalRepuesto +\r\n                        Math.round10(e.vd_can * e.lpd_vpre, -6);\r\n          break;\r\n\r\n        case 6:\r\n          this.infoInputs.totalEnvases =\r\n                        this.infoInputs.totalEnvases +\r\n                        Math.round10(e.vd_can * e.lpd_vpre, -6);\r\n          break;\r\n\r\n        case 7:\r\n          this.infoInputs.totalSuministros =\r\n                        this.infoInputs.totalSuministros +\r\n                        Math.round10(e.vd_can * e.lpd_vpre, -6);\r\n          break;\r\n\r\n        case 8:\r\n          this.infoInputs.totalServicioGasto =\r\n                        this.infoInputs.totalServicioGasto +\r\n                        Math.round10(e.vd_can * e.lpd_vpre, -6);\r\n          break;\r\n\r\n        default:\r\n          this.infoInputs.totalMercaderia =\r\n                        this.infoInputs.totalMercaderia +\r\n                        Math.round10(e.vd_can * e.lpd_vpre, -6);\r\n          break;\r\n      }\r\n\r\n      const numArray = [\r\n        this.infoInputs.totalMercaderia,\r\n        this.infoInputs.totalMateriaPrima,\r\n        this.infoInputs.totalMateriales,\r\n        this.infoInputs.totalEmbalajes,\r\n        this.infoInputs.totalRepuestos,\r\n        this.infoInputs.totalEnvases,\r\n        this.infoInputs.totalSuministros,\r\n        this.infoInputs.totalServicioGasto,\r\n      ];\r\n\r\n      function getMaxOfArray(numArry) {\r\n        return Math.max.apply(null, numArry);\r\n      }\r\n\r\n      const valu = getMaxOfArray(numArray);\r\n      this.infoInputs.maxTipoCategoria = 1 + numArray.indexOf(valu);\r\n\r\n      this.infoInputs.tipoBien = this.defineTipoBien(\r\n          this.infoInputs.maxTipoCategoria,\r\n      );\r\n    });\r\n\r\n    return this.infoInputs;\r\n  };\r\n\r\n\r\n  checkDetraccion(infoInputs) {\r\n    if (\r\n      this.infoInputs.MontoTotalDetraccion >\r\n            Math.round10(this.config.limite_detraccion, -2)\r\n    ) {\r\n      this.infoInputs.showDetraccion = true;\r\n      return 0;\r\n    }\r\n\r\n    this.infoInputs.showDetraccion = false;\r\n    return 0;\r\n  };\r\n\r\n  defineTipoBien(val) {\r\n    const tipo = {\r\n      1: 1,\r\n      2: 1,\r\n      3: 1,\r\n      4: 1,\r\n      5: 1,\r\n      6: 1,\r\n      7: 1,\r\n      8: 5,\r\n    };\r\n    return tipo[val];\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = total;\r\n\n\n//# sourceURL=webpack://nubefa-producto-calculos/./src/totales.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;